
******************************************************
READ THIS CAREFULLY!!! DON'T SKIP ANY PARTS!!!
******************************************************

There are scripts in the directory
	'local_software'
to make handling external software requirements easier.

Not all software packages are required on all platforms. E.g. installing
`autoconf` is only required if the version on the platform is too old.


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!   FIRST THING TO DO BEFORE ANYTHING              !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Change the directory to SWEET's root directory, e.g.
$ cd sweet

1) Before doing anything, you *must* setup your environment variable via
   $ source ./activate.sh

2) Second thing you should do is to install ANACONDA by typing
   $ cd local_software
   $ ./install_anaconda.sh

3) Within the 3rd party software directory in local_software,
   there are installation scripts named as follows:

   ./install_*.sh
   Build and install the 3rd party software automatically
   Please note that this does not necessarily generate highly optimized
   3rd party software, but focusses on getting SWEET running.


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! RECOMMENDED PACKAGES !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

This is a list of recommended scripts to trigger for installation.
First of all, include the environment variables which make the
installed software available to the other install scripts:

Once going into the local_software directory
  $ cd ./local_software
install the following packages if required:

Install Anaconda (Python and more packages)
  $ ./install_anaconda.sh

Use pip to install other packages:
  $ pip3 install matplotlib sympy mpmath


If your compiler is older than gcc 5.3 (check with gcc --version), then
  $ ./install_gcc8.2.sh	# GNU compiler

The other librar(ies)/y can be installed via:
  $ ./install_scons.sh	# Makefile replacement
  $ ./install_numa.sh	# NUMA aware memory allocation

Packages required for simulations on the plane:
  $ ./install_fftw3.sh	# Fast Fourier library

(
   After installing the above mentioned software, you should
   be able to compile an example program such as with

      $ scons --program=swe_nonstaggered_advective
)

Packages required for simulations on the sphere:
  $ ./install_shtns.sh	# Spherical Harmonics library
  $ ./install_lapack.sh # Linear algebra package

Packages required for pfasst++ (C++ PFASST):
  $ ./install_eigen3.sh	# Eigen library

Packages required for libpfasst (Fortran PFASST):
  $ ./install_libpfasst.sh


If there are any compilation problems, please send the last
lines of the output and more information on the used system to

Martin Schreiber <schreiberx@gmail.com>








!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Additional information for users with special environments

Most users don't have to read through this

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

**** MAC OSX USERS ****
**** MAC OSX USERS ****
**** MAC OSX USERS ****

xcode-select --install

FIRST:
Install GNU compiler with local_software scripts

SECOND:
Don't use the python version which is installed on MacOSX.
Install it with the installation scripts

THIRD:
SCons is executed with /usr/bin/env
This basically removes all [DY]LD_LIBRARY_PATH variables
which makes plenty of trouble.
Edit the file local_software/local/bin/scons and replace
the first line with
#! [SWEET INSTALL DIR]/local_software/local/bin/python

**** MAC OSX USERS ****
**** MAC OSX USERS ****
**** MAC OSX USERS ****


