
******************************************************
READ THIS CAREFULLY!!! DON'T SKIP ANY PARTS!!!
******************************************************

There are scripts in the directory
	'local_software'
to make handling external software requirements easier.

Not all software packages are required on all platforms. E.g. installing
`autoconf` is only required if the version on the platform is too old.


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!   FIRST THING TO DO BEFORE ANYTHING              !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Before doing anything, you *must* setup your environment variable via
	source ./local_software/env_vars.sh

or inside the local_software directory via
	source ./env_vars.sh


Within the 3rd party software directory in local_software,
there are installation scripts named as follows:

 * ./install_*.sh
   Build and install the 3rd party software automatically
   Please note that this does not necessarily generate highly optimized
   3rd party software, but focusses on getting SWEET running.



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!! RECOMMENDED PACKAGES !!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

This is a list of recommended scripts to trigger for installation.
First of all, include the environment variables which make the
installed software available to the other install scripts:

Once going into the local_software directory
  $ cd ./local_software
install the following packages if required:

Install python3 and pip:
  $ ./install_python3.sh
  $ ./install_python3_pip.sh

Use pip to install other packages:
  $ pip3 install matplotlib sympy mpmath


If your compiler is older than gcc 5.3 (check with gcc --version), then
  $ ./install_gcc5.3.sh	# GNU compiler

The other librar(ies)/y can be installed via:
  $ ./install_scons.sh	# Makefile replacement
  $ ./install_numa.sh	# NUMA aware memory allocation

Packages required for simulations on the plane:
  $ ./install_fftw3.sh	# Fast Fourier library

(
   After installing the above mentioned software, you should
   be able to compile an example program such as with

      $ scons --program=swe_nonstaggered_advective
)

Packages required for simulations on the sphere:
  $ ./install_shtns.sh	# Spherical Harmonics library
  $ ./install_lapack.sh # Linear algebra package

Packages required for pfasst++ (C++ PFASST):
  $ ./install_eigen3.sh	# Eigen library
  $ ./install_pfast++.sh	# Eigen library

Packages required for libpfasst (Fortran PFASST):
  $ ./install_libpfasst.sh


If there are any compilation problems, please send the last
lines of the output and more information on the used system to

Martin Schreiber <schreiberx@gmail.com>








!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Additional information for users with special environments

Most users don't have to read through this

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

	**** MAC OSX USERS ****
	**** MAC OSX USERS ****
	**** MAC OSX USERS ****

	xcode-select --install

	FIRST:
	Install GNU compiler with local_software scripts

	SECOND:
	Don't use the python version which is installed on MacOSX.
	Install it with the installation scripts

	THIRD:
	SCons is executed with /usr/bin/env
	This basically removes all [DY]LD_LIBRARY_PATH variables
	which makes plenty of trouble.
	Edit the file local_software/local/bin/scons and replace
	the first line with
	#! [SWEET INSTALL DIR]/local_software/local/bin/python

	**** MAC OSX USERS ****
	**** MAC OSX USERS ****
	**** MAC OSX USERS ****


from the SWEET source code directory to setup your
environment variables correctly.




Alternative installation options

================
Autoconf:
================
	Only install autoconf from the ./local_software directory
	if your currently installed version is too old (e.g. on some
	compute cluster)


================
SCons:
================
	SCons is required for building SWEET
	http://www.scons.org/

	OR
	apt-get install scons

	A version compatible with Python 3 is required

	
	

================
FFTW (almost mandatory): mandatory if Fourier space is required
================
	$ ./install_fftw3.sh

	OR
	apt-get install libfftw3-dev


================
SHTNS (optional): Required for Spherical Harmonics
================

	If you like to run simulations with spherical harmonics, you
	need to install the SHTNS library:
	
	$ ./install_shtns.sh


================
LAPACK (optional): Required for REXI on the sphere for spectral space solver
================

	Lapack is required to solve the diagonal-blocked partitions of the spectral
	matrix. Instsall with

	$ ./install_lapack.sh


================
GUI:
================


	================
	SDL (optional): Graphical user interface to simulations
	================
		The GUI depends on libSDL2
		https://www.libsdl.org/

		apt-get install libsdl2-dev

		OR
		
		Download  http://libsdl.org/release/SDL2-2.X.X.tar.gz
		./configure --prefix=$HOME/local/SDL2-2.0.3
		make -j 4
		make install
		Add the SDL2-2.0.3 to manually installed libraries 
		 enviromental variables to import them.
		 (Such as in $HOME/bin/local_vars.sh).

	================
	Freetype: Font library
	================
		You also need to install the freetype library.
		On Ubuntu Linux systems the developer libraries
		can be installed e.g. with
		$ sudo apt-get install libfreetype6-dev

	================
	Mesa 3D libs
	================
		You require the GL MESA drivers on Linux system.
		Install them on Ubuntu systems e.g. by using
		$ sudo apt-get install libgl1-mesa-dev


================
NUMA (optional): Optimized memory allocation
================
	Get libnuma from
	ftp://oss.sgi.com/www/projects/libnuma/download/numactl-2.0.10.tar.gz


================
MPI - (Optional)
================
	Get OpenMPI or other MPI parallelization library
	http://www.open-mpi.org/software/ompi/v1.8/
	openmpi-1.8.6.tar.bz2

	tar xzf openmpi-1.8.6.tar.bz2
	./configure --prefix=$HOME/local/sweet_support
	make -j 4 install
